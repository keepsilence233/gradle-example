/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

/**
 * <p>
 * 	id 'java-library'
 *  通过应用 Java 库插件，您可以获得一大堆功能：
 *  编译src/main/javacompileJava下所有 Java 源文件的任务
 *  src/test/javacompileTestJava下源文件的一个任务
 *  从src/test/javatest运行测试的任务
 *   将src/main/resources中已编译的类和资源jar打包到名为<project>-<version>.jar的单个 JAR中的任务main
 *   为类javadoc生成 Javadoc 的任务main
 * </p>
 */
plugins {
	id 'qx.leizige.gradle.example.java-application-conventions'
	id 'java-library'//	应用 java-library 插件进行 API 和实现分离
}

//您通常希望 JAR 文件的名称包含库版本。version这是通过在构建脚本中设置顶级属性来实现的
version = '1.2.1'

java {
	//添加 API 文档
	withJavadocJar()
	//针对特定的 Java 版本
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

//Repository (ex: mavenCentral()) — 在哪里查找您声明为依赖项的模块
repositories {
	mavenCentral()//使用 Maven Central 解决依赖关系。


	//指定多个存储库
//	maven {
//		url "https://repo.spring.io/release"
//	}
//	maven {
//		url "https://repository.jboss.org/maven2"
//	}
}

configurations {
	asciidoclet
}


//指定依赖项，例如名称和版本
/**
 * <p>
 *     compileOnly— 对于编译生产代码所必需但不应成为运行时类路径的一部分的依赖项
 *     implementation(取代compile) — 用于编译和运行时
 *     runtimeOnly（取代runtime）——仅在运行时使用，不用于编译
 *     testCompileOnly— 与compileOnly测试相同
 *     testImplementation— 测试等效于implementation
 *     testRuntimeOnly— 测试等效于runtimeOnly
 * </p>
 */
dependencies {
	/**
	 * 配置 implementaon  一个命名的依赖集合，为特定目标组合在一起，例如编译或运行模块——一种更灵活的 Maven 范围形式
	 * 模块坐标(ex: org.hibernate:hibernate-core-3.6.7.Final) — 依赖项的 ID，通常格式为 ' <group> : <module> : <version> '（或Maven 术语中的 ' <groupId> : <artifactId> : <version> '）
	 */
	implementation 'org.hibernate:hibernate-core:3.6.7.Final'
	implementation 'org.apache.commons:commons-text'
	implementation project(':utilities')

	asciidoclet 'org.asciidoctor:asciidoclet:1.+'
}

application {
	// Define the main class for the application.
	mainClass = 'qx.leizige.gradle.example.app.App'
}

//生成doc文档
tasks.register('configureJavadoc') {
	doLast {
		javadoc {
			options.doclet = 'org.asciidoctor.Asciidoclet'
			options.docletpath = configurations.asciidoclet.files.toList()
		}
	}
}
javadoc {
	dependsOn configureJavadoc
}